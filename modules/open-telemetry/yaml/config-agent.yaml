receivers:
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/receiver/kubeletstatsreceiver/documentation.md
  kubeletstats:
    collection_interval: 20s
    auth_type: "serviceAccount"
    endpoint: "$${K8S_NODE_NAME}:10250"
    insecure_skip_verify: true
    extra_metadata_labels:
      - container.id
      - k8s.volume.type
    k8s_api_config:
      auth_type: serviceAccount
processors:
  batch:
  memory_limiter:
    # Same as --mem-ballast-size-mib CLI argument
    # ballast_size_mib: 128
    # 80% of maximum memory up to 2G
    limit_mib: 450
    # 25% of limit up to 2G
    spike_limit_mib: 128
    check_interval: 5s
  k8sattributes:
    auth_type: "serviceAccount"
    passthrough: false
    filter:
      node_from_env_var: KUBE_NODE_NAME
    extract:
      labels:
        - tag_name: app
          key: app
          regex: field=(?P<value>.+)
          from: pod
        - tag_name: app.kubernetes.io/name
          key: service
          regex: field=(?P<value>.+)
          from: pod
extensions:
  health_check: { }
  # https://github.com/open-telemetry/opentelemetry-collector/blob/main/extension/zpagesextension/README.md#exposed-zpages-routes
  zpages: { }
  pprof: { }
exporters:
  otlp/lightstep:
    endpoint: "ingest.lightstep.com:443"
    headers: { "lightstep-access-token": "$${LIGHTSTEP_ACCESS_TOKEN}" }
  logging:
    loglevel: info
service:
  extensions: [ health_check, zpages, pprof ]
  pipelines:
    metrics:
      receivers: [kubeletstats]
      processors: ${metricsProcessors}
      exporters: ${metricsExporters}
