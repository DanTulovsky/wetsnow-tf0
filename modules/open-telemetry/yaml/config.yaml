receivers:
  otlp:
    protocols:
      grpc:
      http:
  opencensus:
  statsd:
    endpoint: "localhost:8125" # default
    aggregation_interval: 60s  # default
    enable_metric_type: true
  jaeger:
    protocols:
      grpc:
      thrift_http:
      thrift_compact:
      thrift_binary:
    remote_sampling:
      strategy_file: "/etc/jaeger/jaeger-sampling-config.json"
      # Doesn't work
      # fetch_endpoint: "jaeger-collector.observability:5778"
  zipkin:
  k8s_cluster:
    auth_type: "serviceAccount"
    collection_interval: 10s
    node_conditions_to_report:
      [ Ready, MemoryPressure, DiskPressure, PIDPressure, NetworkUnavailable ]
  kubeletstats:
    collection_interval: 20s
    auth_type: "serviceAccount"
    endpoint: "$${K8S_NODE_NAME}:10250"
    insecure_skip_verify: true
    extra_metadata_labels:
      - container.id
      - k8s.volume.type
    k8s_api_config:
      auth_type: serviceAccount
processors:
  batch:
  memory_limiter:
    # Same as --mem-ballast-size-mib CLI argument
    # ballast_size_mib: 128
    # 80% of maximum memory up to 2G
    limit_mib: 450
    # 25% of limit up to 2G
    spike_limit_mib: 128
    check_interval: 5s
  k8sattributes:
    passthrough: true
extensions:
  health_check: { }
  # https://github.com/open-telemetry/opentelemetry-specification/blob/main/experimental/trace/zpages.md
  zpages: { }
  pprof: { }
exporters:
  otlp/lightstep:
    endpoint: "ingest.lightstep.com:443"
    headers: { "lightstep-access-token": "$${LIGHTSTEP_ACCESS_TOKEN}" }
  logging:
    loglevel: info
service:
  extensions: [ health_check, zpages, pprof ]
  pipelines:
    metrics:
      receivers: ${metricsReceivers}
      processors: ${metricsProcessors}
      exporters: ${metricsExporters}
    traces/1:
      receivers: ${traceReceivers}
      processors: ${traceProcessors}
      exporters: ${traceExporters}
