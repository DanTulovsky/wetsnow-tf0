# https://artifacthub.io/packages/helm/datawire/edge-stack/8.1.0
nameOverride: "${name}"

licenseKey:
  value: ${licenseKey}
  annotations: { }
  createSecret: true


emissary-ingress:
image:
  repository: docker.io/datawire/aes
  tag: ${app_version}
  pullPolicy: IfNotPresent
  replicaCount: 1
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8877"
    prometheus.io/path: "/metrics"
  podLabels:
    # match the span service.name
    service.name: "ambassador-ambassador"
    service.version: ${app_version}
  resources:
    limits:
      cpu: 300m
      memory: 512Mi
    requests:
      cpu: 10m
      memory: 256Mi
  service:
    annotations:
      # kubernetes.io/ingress.global-static-ip-name: "ambassador"
      cloud.google.com/neg: '{"ingress": true}'
      cloud.google.com/backend-config: '{"default": "${backendConfig}"}'
      cloud.google.com/app-protocols: '{"grpc": "HTTP2"}'
    externalIPs: [ ]
    ports:
      - name: http
        port: 8080
        targetPort: 8080
      - name: grpc
        port: 8443
        targetPort: 8443
      # - name: minecraft
      #   port: 25565
      #   targetPort: 25565
    # type: LoadBalancer
    type: NodePort
    # This breaks on GKE, perhaps healthCheckNodePort is needed?
    # externalTrafficPolicy: Cluster
    # externalTrafficPolicy: Local
  adminService:
    create: true
    port: 8877
    type: NodePort
  resolvers:
    endpoint:
      create: true
      name: endpoint
  createDefaultListeners: false
env:
  AMBASSADOR_LEGACY_MODE: false
  # https://docs.datadoghq.com/integrations/ambassador/
  STATSD_ENABLED: true
  DOGSTATSD: true
  # STATSD_HOST: "localhost"

envRaw:
  - name: STATSD_HOST
    valueFrom:
      fieldRef:
        fieldPath: status.hostIP

redis:
  resources:
    limits:
      cpu: 300m
      memory: 256Mi
    requests:
      cpu: 10m
      memory: 128Mi

agent:
  enabled: false

livenessProbe:
  initialDelaySeconds: 30
  periodSeconds: 6
  failureThreshold: 6

readinessProbe:
  initialDelaySeconds: 30
  periodSeconds: 6
  failureThreshold: 6

authService:
  create: false

ratelimit:
  create: false